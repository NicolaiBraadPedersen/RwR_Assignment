n <- 1000
t_vals <- 10:40
n_sim <- 100  # number of simulation iterations

X_sim <- cbind(
  rtruncnorm(n, a=44,b=143, mean = 75, sd = sqrt(150)),
  rtruncnorm(n, a=15,b=56,mean = 25, sd = sqrt(16))
)

# Create storage matrices
coef_intercept_surv <- matrix(NA, nrow = n_sim, ncol = length(t_vals))
coef_HR_surv        <- matrix(NA, nrow = n_sim, ncol = length(t_vals))
coef_BMI_surv       <- matrix(NA, nrow = n_sim, ncol = length(t_vals))

colnames(coef_intercept_surv) <- colnames(coef_HR_surv) <- colnames(coef_BMI_surv) <- paste0("t", t_vals)

# Start simulation loop
for (sim in 1:n_sim) {
  U = runif(n, 0, 1)
  gamma_0 = 4.4
  beta = c(-0.2, -0.02)
  eta = X_sim %*% beta
  T_star = exp((1 / gamma_0) * (log(U / (1 - U)) - eta))
  df = data.frame(X_HR = X_sim[,1],
                  X_BMI = X_sim[,2],
                  T_star = T_star)
  # Fit logistic regressions for each t
  for (i in seq_along(t_vals)) {
    t <- t_vals[i]
    df$Y_t <- ifelse(df$T_star < t, 1, 0)
    model_Y_surv <- survreg(
      Surv(T_star,Y_t) ~ X_HR+X_BMI, 
      data = df, dist="loglogistic")
    coefs <- coef(model_Y_surv)
    scale <- model_Y_surv$scale
    coef_intercept_surv[sim, i] <- 1/scale *(log(i)-coefs[1])
    coef_HR_surv[sim, i]        <- -1/scale *coefs[2]
    coef_BMI_surv[sim, i]       <- -1/scale *coefs[3]
  }
}

model_surv_add <- survreg(
  Surv(TIMECVD+0.5,(as.numeric(CVD)-1)) ~ SEX + AGE + BMI + CIGPDAY + SYSBP + TOTCHOL + PREVCHD + DIABETES + PREVSTRK + HEARTRTE , 
  data = framingham, dist="loglogistic")

summary(model_surv_add)
log(8766)-16.26


model_surv_int <- survreg(
  Surv(TIMECVD+0.01,as.numeric(CVD)-1) ~ SEX + AGE + BMI + CIGPDAY + SYSBP + TOTCHOL + PREVCHD + DIABETES + 
    PREVSTRK + HEARTRTE + SEX:AGE + SEX:CIGPDAY + SEX:HEARTRTE + AGE:CIGPDAY + AGE:HEARTRTE + 
    BMI:CIGPDAY,
  data = framingham, dist="loglogistic")
int_res = augment(model_surv_int,type.predict="expected")
int_
ggplot(int_res,aes(x=.fitted,y=.resid))+geom_point()+geom_smooth()
summary(model_surv_int)
log(8766)-18.30

hist(residuals(model_surv_int))
sum(fitted(model_surv_add)>8766)
p1 <- augment(model_surv_int, data = framingham, type.predict = "expected") |>
  survfit(Surv(.fitted, CVD) ~ 1, data = _) |>
  summary(data.frame = TRUE) |>
  ggplot(aes(time, cumhaz)) + 
  geom_abline(slope = 1, color = "blue") +
  ylim(1,-4000)+
  geom_point() +
  xlab("Cox-Snell residuals") + 
  ylab("Cumulative hazard")
p1

p2 <- augment(model_surv_add) |> 
  ggplot(aes(.fitted, .resid)) +
  geom_point(alpha = 0.4) + 
  geom_smooth() + 
  ylim(-4000,1)+
  xlim(0,8766)+
  xlab("Fitted values") +
  ylab("Martingale residuals")
p2
gridExtra::grid.arrange( p2, ncol = 2)


augment(model_surv_int, data = framingham) |> 
  ggplot(aes(SEX, .resid)) + 
  ggbeeswarm::geom_beeswarm(alpha = 0.4) + 
  geom_point(
    stat = "summary", 
    fun = mean, 
    color = "blue", 
    size = 2.5
  ) +
  geom_errorbar(
    stat = "summary", 
    fun.data = mean_se, 
    fun.args = list(mult = 1.96),
    color = "blue", 
    width = 0.15, 
    linewidth = 0.7
  )
